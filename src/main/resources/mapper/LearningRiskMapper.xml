<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.personalizedlearning.system.mapper.LearningRiskMapper">

    <!-- 基础结果映射 -->
    <resultMap id="BaseResultMap" type="com.personalizedlearning.system.entity.LearningRisk">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="student_id" property="studentId" jdbcType="BIGINT"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="risk_percentage" property="riskPercentage" jdbcType="INTEGER"/>
        <result column="reason" property="reason" jdbcType="LONGVARCHAR"/>
        <result column="recommendations" property="recommendations" jdbcType="LONGVARCHAR"/>
        <result column="is_processed" property="isProcessed" jdbcType="BOOLEAN"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 插入学习风险 -->
    <insert id="insert" parameterType="com.personalizedlearning.system.entity.LearningRisk">
        INSERT INTO learning_risks (student_id, course_id, risk_percentage, reason, recommendations, is_processed)
        VALUES (#{studentId}, #{courseId}, #{riskPercentage}, #{reason}, #{recommendations}, #{isProcessed})
    </insert>

    <!-- 更新学习风险 -->
    <update id="update" parameterType="com.personalizedlearning.system.entity.LearningRisk">
        UPDATE learning_risks
        SET student_id = #{studentId},
            course_id = #{courseId},
            risk_percentage = #{riskPercentage},
            reason = #{reason},
            recommendations = #{recommendations},
            is_processed = #{isProcessed}
        WHERE id = #{id}
    </update>

    <!-- 删除学习风险 -->
    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM learning_risks WHERE id = #{id}
    </delete>

    <!-- 根据ID查询学习风险 -->
    <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT * FROM learning_risks WHERE id = #{id}
    </select>

    <!-- 查询所有学习风险 -->
    <select id="findAll" resultMap="BaseResultMap">
        SELECT * FROM learning_risks
    </select>

    <!-- 根据学生ID查询学习风险 -->
    <select id="findByStudentId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT * FROM learning_risks WHERE student_id = #{studentId}
    </select>

    <!-- 根据课程ID查询学习风险 -->
    <select id="findByCourseId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT * FROM learning_risks WHERE course_id = #{courseId}
    </select>

    <!-- 根据学生和课程ID查询学习风险 -->
    <select id="findByStudentAndCourse" parameterType="map" resultMap="BaseResultMap">
        SELECT * FROM learning_risks
        WHERE student_id = #{studentId} AND course_id = #{courseId}
    </select>

    <!-- 根据风险等级查询 -->
    <select id="findByLevel" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT * FROM learning_risks
        WHERE CASE 
            WHEN #{level} = 'high' THEN risk_percentage >= 70
            WHEN #{level} = 'medium' THEN risk_percentage >= 40 AND risk_percentage < 70
            WHEN #{level} = 'low' THEN risk_percentage < 40
            ELSE TRUE
        END
    </select>

    <!-- 获取总风险数 -->
    <select id="getTotalRisks" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks
    </select>

    <!-- 获取高风险数 -->
    <select id="getHighRisks" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks WHERE risk_percentage >= 70
    </select>

    <!-- 获取中等风险数 -->
    <select id="getMediumRisks" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks WHERE risk_percentage >= 40 AND risk_percentage < 70
    </select>

    <!-- 获取低风险数 -->
    <select id="getLowRisks" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks WHERE risk_percentage < 40
    </select>

    <!-- 获取已解决风险数 -->
    <select id="getResolvedRisks" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks WHERE is_processed = TRUE
    </select>

    <!-- 获取活跃风险数 -->
    <select id="getActiveRisks" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks WHERE is_processed = FALSE
    </select>

    <!-- 获取课程总风险数 -->
    <select id="getTotalRisksByCourseId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks WHERE course_id = #{courseId}
    </select>

    <!-- 获取课程高风险数 -->
    <select id="getHighRisksByCourseId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks WHERE course_id = #{courseId} AND risk_percentage >= 70
    </select>

    <!-- 获取课程中等风险数 -->
    <select id="getMediumRisksByCourseId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks WHERE course_id = #{courseId} AND risk_percentage >= 40 AND risk_percentage < 70
    </select>

    <!-- 获取课程低风险数 -->
    <select id="getLowRisksByCourseId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks WHERE course_id = #{courseId} AND risk_percentage < 40
    </select>

    <!-- 获取课程已解决风险数 -->
    <select id="getResolvedRisksByCourseId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks WHERE course_id = #{courseId} AND is_processed = TRUE
    </select>

    <!-- 获取课程活跃风险数 -->
    <select id="getActiveRisksByCourseId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks WHERE course_id = #{courseId} AND is_processed = FALSE
    </select>

    <!-- 查询高风险学生 -->
    <select id="getHighRiskStudents" resultType="map">
        SELECT u.id, u.username, u.name, u.email, COUNT(*) as risk_count
        FROM users u
        JOIN learning_risks r ON u.id = r.student_id
        WHERE r.risk_percentage >= 70 AND r.is_processed = FALSE
        GROUP BY u.id, u.username, u.name, u.email
        ORDER BY risk_count DESC
    </select>

    <!-- 查询即将到期的风险预警 -->
    <select id="findExpiringSoonRisks" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM learning_risks
        WHERE is_processed = FALSE
          AND updated_at BETWEEN DATE_SUB(NOW(), INTERVAL #{days} DAY) AND NOW()
    </select>

    <!-- 分页查询学习风险 -->
    <select id="findByPage" parameterType="map" resultMap="BaseResultMap">
        SELECT * FROM learning_risks LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 查询学习风险总数 -->
    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM learning_risks
    </select>
</mapper>